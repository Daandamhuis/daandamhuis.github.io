"use strict";(self.webpackChunkpersonal_website=self.webpackChunkpersonal_website||[]).push([[8235],{3905:(e,t,l)=>{l.d(t,{Zo:()=>i,kt:()=>y});var n=l(7294);function r(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function a(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function o(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?a(Object(l),!0).forEach((function(t){r(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):a(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function u(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),l=t;return e&&(l="function"==typeof e?e(t):o(o({},t),e)),l},i=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var l=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),p=d(l),c=r,y=p["".concat(s,".").concat(c)]||p[c]||k[c]||a;return l?n.createElement(y,o(o({ref:t},i),{},{components:l})):n.createElement(y,o({ref:t},i))}));function y(e,t){var l=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=l.length,o=new Array(a);o[0]=c;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[p]="string"==typeof e?e:r,o[1]=u;for(var d=2;d<a;d++)o[d]=l[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,l)}c.displayName="MDXCreateElement"},5065:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>u,toc:()=>d});var n=l(7462),r=(l(7294),l(3905));const a={sidebar_position:2,sidebar_label:"Tables",description:"This page contains all columns with tables for Model, including the description, and technical details."},o="Tables Model",u={unversionedId:"adventure-works/tables/index",id:"adventure-works/tables/index",title:"Tables Model",description:"This page contains all columns with tables for Model, including the description, and technical details.",source:"@site/docs/adventure-works/tables/index.md",sourceDirName:"adventure-works/tables",slug:"/adventure-works/tables/",permalink:"/docs/adventure-works/tables/",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Tables",description:"This page contains all columns with tables for Model, including the description, and technical details."},sidebar:"tutorialSidebar",previous:{title:"Measures",permalink:"/docs/adventure-works/measures"},next:{title:"Customer",permalink:"/docs/adventure-works/tables/customer"}},s={},d=[{value:"Customer",id:"customer",level:3},{value:"Date",id:"date",level:3},{value:"Product",id:"product",level:3},{value:"Reseller",id:"reseller",level:3},{value:"Sales",id:"sales",level:3},{value:"Sales Order",id:"sales-order",level:3},{value:"Sales Territory",id:"sales-territory",level:3},{value:"Table",id:"table",level:3}],i={toc:d};function p(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},i,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tables-model"},"Tables Model"),(0,r.kt)("h3",{id:"customer"},"Customer"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description"),": "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"No Description available")),(0,r.kt)("dl",null,(0,r.kt)("dt",null,"Measures (#)"),(0,r.kt)("dd",null,"0"),(0,r.kt)("dt",null,"Columns (#)"),(0,r.kt)("dd",null,"8"),(0,r.kt)("dt",null,"Partiton (#)"),(0,r.kt)("dd",null,"1"),(0,r.kt)("dt",null,"Data Category"),(0,r.kt)("dd",null,"Regular Table"),(0,r.kt)("dt",null,"Is Hidden"),(0,r.kt)("dd",null,"False"),(0,r.kt)("dt",null,"Table Type"),(0,r.kt)("dd",null,"Partition"),(0,r.kt)("dt",null,"Source Type"),(0,r.kt)("dd",null,"M")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powerquery",metastring:'title="Table Source: Customer"',title:'"Table',"Source:":!0,'Customer"':!0},'   let\n    Source = Excel.Workbook(File.Contents("C:\\Users\\CStallings\\Documents\\py_files\\PyTabular\\test\\adventureworks\\AdventureWorks Sales.xlsx"), null, true),\n    Customer_Table = Source{[Item="Customer",Kind="Table"]}[Data],\n    #"Changed Type" = Table.TransformColumnTypes(Customer_Table,{{"CustomerKey", Int64.Type}, {"Customer ID", type text}, {"Customer", type text}, {"City", type text}, {"State-Province", type text}, {"Country-Region", type text}, {"Postal Code", type text}})\nin\n    #"Changed Type"\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"date"},"Date"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description"),": "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"No Description available")),(0,r.kt)("dl",null,(0,r.kt)("dt",null,"Measures (#)"),(0,r.kt)("dd",null,"0"),(0,r.kt)("dt",null,"Columns (#)"),(0,r.kt)("dd",null,"8"),(0,r.kt)("dt",null,"Partiton (#)"),(0,r.kt)("dd",null,"1"),(0,r.kt)("dt",null,"Data Category"),(0,r.kt)("dd",null,"Time"),(0,r.kt)("dt",null,"Is Hidden"),(0,r.kt)("dd",null,"False"),(0,r.kt)("dt",null,"Table Type"),(0,r.kt)("dd",null,"Partition"),(0,r.kt)("dt",null,"Source Type"),(0,r.kt)("dd",null,"M")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powerquery",metastring:'title="Table Source: Date"',title:'"Table',"Source:":!0,'Date"':!0},'   let\n    Source = Excel.Workbook(File.Contents("C:\\Users\\CStallings\\Documents\\py_files\\PyTabular\\test\\adventureworks\\AdventureWorks Sales.xlsx"), null, true),\n    Date_Table = Source{[Item="Date",Kind="Table"]}[Data],\n    #"Changed Type" = Table.TransformColumnTypes(Date_Table,{{"DateKey", Int64.Type}, {"Date", type date}, {"Fiscal Year", type text}, {"Fiscal Quarter", type text}, {"Month", type date}, {"Full Date", type date}, {"MonthKey", Int64.Type}})\nin\n    #"Changed Type"\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"product"},"Product"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description"),": "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"No Description available")),(0,r.kt)("dl",null,(0,r.kt)("dt",null,"Measures (#)"),(0,r.kt)("dd",null,"0"),(0,r.kt)("dt",null,"Columns (#)"),(0,r.kt)("dd",null,"11"),(0,r.kt)("dt",null,"Partiton (#)"),(0,r.kt)("dd",null,"1"),(0,r.kt)("dt",null,"Data Category"),(0,r.kt)("dd",null,"Regular Table"),(0,r.kt)("dt",null,"Is Hidden"),(0,r.kt)("dd",null,"False"),(0,r.kt)("dt",null,"Table Type"),(0,r.kt)("dd",null,"Partition"),(0,r.kt)("dt",null,"Source Type"),(0,r.kt)("dd",null,"M")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powerquery",metastring:'title="Table Source: Product"',title:'"Table',"Source:":!0,'Product"':!0},'   let\n    Source = Excel.Workbook(File.Contents("C:\\Users\\CStallings\\Documents\\py_files\\PyTabular\\test\\adventureworks\\AdventureWorks Sales.xlsx"), null, true),\n    Product_Table = Source{[Item="Product",Kind="Table"]}[Data],\n    #"Changed Type" = Table.TransformColumnTypes(Product_Table,{{"ProductKey", Int64.Type}, {"SKU", type text}, {"Product", type text}, {"Standard Cost", type number}, {"Color", type text}, {"List Price", type number}, {"Model", type text}, {"Subcategory", type text}, {"Category", type text}})\nin\n    #"Changed Type"\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"reseller"},"Reseller"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description"),": "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"No Description available")),(0,r.kt)("dl",null,(0,r.kt)("dt",null,"Measures (#)"),(0,r.kt)("dd",null,"0"),(0,r.kt)("dt",null,"Columns (#)"),(0,r.kt)("dd",null,"9"),(0,r.kt)("dt",null,"Partiton (#)"),(0,r.kt)("dd",null,"1"),(0,r.kt)("dt",null,"Data Category"),(0,r.kt)("dd",null,"Regular Table"),(0,r.kt)("dt",null,"Is Hidden"),(0,r.kt)("dd",null,"False"),(0,r.kt)("dt",null,"Table Type"),(0,r.kt)("dd",null,"Partition"),(0,r.kt)("dt",null,"Source Type"),(0,r.kt)("dd",null,"M")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powerquery",metastring:'title="Table Source: Reseller"',title:'"Table',"Source:":!0,'Reseller"':!0},'   let\n    Source = Excel.Workbook(File.Contents("C:\\Users\\CStallings\\Documents\\py_files\\PyTabular\\test\\adventureworks\\AdventureWorks Sales.xlsx"), null, true),\n    Reseller_Table = Source{[Item="Reseller",Kind="Table"]}[Data],\n    #"Changed Type" = Table.TransformColumnTypes(Reseller_Table,{{"ResellerKey", Int64.Type}, {"Reseller ID", type text}, {"Business Type", type text}, {"Reseller", type text}, {"City", type text}, {"State-Province", type text}, {"Country-Region", type text}, {"Postal Code", type text}})\nin\n    #"Changed Type"\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sales"},"Sales"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description"),": "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"No Description available")),(0,r.kt)("dl",null,(0,r.kt)("dt",null,"Measures (#)"),(0,r.kt)("dd",null,"2"),(0,r.kt)("dt",null,"Columns (#)"),(0,r.kt)("dd",null,"16"),(0,r.kt)("dt",null,"Partiton (#)"),(0,r.kt)("dd",null,"1"),(0,r.kt)("dt",null,"Data Category"),(0,r.kt)("dd",null,"Regular Table"),(0,r.kt)("dt",null,"Is Hidden"),(0,r.kt)("dd",null,"False"),(0,r.kt)("dt",null,"Table Type"),(0,r.kt)("dd",null,"Partition"),(0,r.kt)("dt",null,"Source Type"),(0,r.kt)("dd",null,"M")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powerquery",metastring:'title="Table Source: Sales"',title:'"Table',"Source:":!0,'Sales"':!0},'   let\n    Source = Excel.Workbook(File.Contents("C:\\Users\\CStallings\\Documents\\py_files\\PyTabular\\test\\adventureworks\\AdventureWorks Sales.xlsx"), null, true),\n    Sales_Table = Source{[Item="Sales",Kind="Table"]}[Data],\n    #"Changed Type" = Table.TransformColumnTypes(Sales_Table,{{"SalesOrderLineKey", Int64.Type}, {"ResellerKey", Int64.Type}, {"CustomerKey", Int64.Type}, {"ProductKey", Int64.Type}, {"OrderDateKey", Int64.Type}, {"DueDateKey", Int64.Type}, {"ShipDateKey", Int64.Type}, {"SalesTerritoryKey", Int64.Type}, {"Order Quantity", Int64.Type}, {"Unit Price", type number}, {"Extended Amount", type number}, {"Unit Price Discount Pct", Int64.Type}, {"Product Standard Cost", type number}, {"Total Product Cost", type number}, {"Sales Amount", type number}})\nin\n    #"Changed Type"\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sales-order"},"Sales Order"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description"),": "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"No Description available")),(0,r.kt)("dl",null,(0,r.kt)("dt",null,"Measures (#)"),(0,r.kt)("dd",null,"0"),(0,r.kt)("dt",null,"Columns (#)"),(0,r.kt)("dd",null,"5"),(0,r.kt)("dt",null,"Partiton (#)"),(0,r.kt)("dd",null,"1"),(0,r.kt)("dt",null,"Data Category"),(0,r.kt)("dd",null,"Regular Table"),(0,r.kt)("dt",null,"Is Hidden"),(0,r.kt)("dd",null,"False"),(0,r.kt)("dt",null,"Table Type"),(0,r.kt)("dd",null,"Partition"),(0,r.kt)("dt",null,"Source Type"),(0,r.kt)("dd",null,"M")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powerquery",metastring:'title="Table Source: Sales Order"',title:'"Table',"Source:":!0,Sales:!0,'Order"':!0},'   let\n    Source = Excel.Workbook(File.Contents("C:\\Users\\CStallings\\Documents\\py_files\\PyTabular\\test\\adventureworks\\AdventureWorks Sales.xlsx"), null, true),\n    SalesOrder_Table = Source{[Item="SalesOrder",Kind="Table"]}[Data],\n    #"Changed Type" = Table.TransformColumnTypes(SalesOrder_Table,{{"Channel", type text}, {"SalesOrderLineKey", Int64.Type}, {"Sales Order", type text}, {"Sales Order Line", type text}})\nin\n    #"Changed Type"\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sales-territory"},"Sales Territory"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description"),": "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"No Description available")),(0,r.kt)("dl",null,(0,r.kt)("dt",null,"Measures (#)"),(0,r.kt)("dd",null,"0"),(0,r.kt)("dt",null,"Columns (#)"),(0,r.kt)("dd",null,"5"),(0,r.kt)("dt",null,"Partiton (#)"),(0,r.kt)("dd",null,"1"),(0,r.kt)("dt",null,"Data Category"),(0,r.kt)("dd",null,"Regular Table"),(0,r.kt)("dt",null,"Is Hidden"),(0,r.kt)("dd",null,"False"),(0,r.kt)("dt",null,"Table Type"),(0,r.kt)("dd",null,"Partition"),(0,r.kt)("dt",null,"Source Type"),(0,r.kt)("dd",null,"M")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powerquery",metastring:'title="Table Source: Sales Territory"',title:'"Table',"Source:":!0,Sales:!0,'Territory"':!0},'   let\n    Source = Excel.Workbook(File.Contents("C:\\Users\\CStallings\\Documents\\py_files\\PyTabular\\test\\adventureworks\\AdventureWorks Sales.xlsx"), null, true),\n    SalesTerritory_Table = Source{[Item="SalesTerritory",Kind="Table"]}[Data],\n    #"Changed Type" = Table.TransformColumnTypes(SalesTerritory_Table,{{"SalesTerritoryKey", Int64.Type}, {"Region", type text}, {"Country", type text}, {"Group", type text}})\nin\n    #"Changed Type"\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"table"},"Table"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description"),": "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"No Description available")),(0,r.kt)("dl",null,(0,r.kt)("dt",null,"Measures (#)"),(0,r.kt)("dd",null,"0"),(0,r.kt)("dt",null,"Columns (#)"),(0,r.kt)("dd",null,"3"),(0,r.kt)("dt",null,"Partiton (#)"),(0,r.kt)("dd",null,"1"),(0,r.kt)("dt",null,"Data Category"),(0,r.kt)("dd",null,"Regular Table"),(0,r.kt)("dt",null,"Is Hidden"),(0,r.kt)("dd",null,"False"),(0,r.kt)("dt",null,"Table Type"),(0,r.kt)("dd",null,"Partition"),(0,r.kt)("dt",null,"Source Type"),(0,r.kt)("dd",null,"M")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powerquery",metastring:'title="Table Source: Table"',title:'"Table',"Source:":!0,'Table"':!0},'   let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WckxOTi0uzi/KTC1W0lEyUYrViVZyyswG8wzBPOec/JKMzLx0oIAxRCA/tyA/LzWvBKTGSCk2FgA=", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Category = _t, Sorting = _t]),\n    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Category", type text}, {"Sorting", Int64.Type}})\nin\n    #"Changed Type"\n')),(0,r.kt)("hr",null))}p.isMDXComponent=!0}}]);